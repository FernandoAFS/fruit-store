# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from fruit_store.grpc import fruit_store_pb2 as fruit__store_dot_grpc_dot_fruit__store__pb2


class ServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PutSale = channel.unary_unary(
                '/fruit_store.Server/PutSale',
                request_serializer=fruit__store_dot_grpc_dot_fruit__store__pb2.SaleEvent.SerializeToString,
                response_deserializer=fruit__store_dot_grpc_dot_fruit__store__pb2.Empty.FromString,
                )
        self.GetReport = channel.unary_unary(
                '/fruit_store.Server/GetReport',
                request_serializer=fruit__store_dot_grpc_dot_fruit__store__pb2.ReportRequest.SerializeToString,
                response_deserializer=fruit__store_dot_grpc_dot_fruit__store__pb2.ReportResponse.FromString,
                )
        self.Healthcheck = channel.unary_unary(
                '/fruit_store.Server/Healthcheck',
                request_serializer=fruit__store_dot_grpc_dot_fruit__store__pb2.Empty.SerializeToString,
                response_deserializer=fruit__store_dot_grpc_dot_fruit__store__pb2.Empty.FromString,
                )


class ServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PutSale(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Healthcheck(self, request, context):
        """UPDATE TO INCLUDE FULL HEALTHCHECK DATA
        https://inadarei.github.io/rfc-healthcheck/
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PutSale': grpc.unary_unary_rpc_method_handler(
                    servicer.PutSale,
                    request_deserializer=fruit__store_dot_grpc_dot_fruit__store__pb2.SaleEvent.FromString,
                    response_serializer=fruit__store_dot_grpc_dot_fruit__store__pb2.Empty.SerializeToString,
            ),
            'GetReport': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReport,
                    request_deserializer=fruit__store_dot_grpc_dot_fruit__store__pb2.ReportRequest.FromString,
                    response_serializer=fruit__store_dot_grpc_dot_fruit__store__pb2.ReportResponse.SerializeToString,
            ),
            'Healthcheck': grpc.unary_unary_rpc_method_handler(
                    servicer.Healthcheck,
                    request_deserializer=fruit__store_dot_grpc_dot_fruit__store__pb2.Empty.FromString,
                    response_serializer=fruit__store_dot_grpc_dot_fruit__store__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'fruit_store.Server', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Server(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PutSale(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fruit_store.Server/PutSale',
            fruit__store_dot_grpc_dot_fruit__store__pb2.SaleEvent.SerializeToString,
            fruit__store_dot_grpc_dot_fruit__store__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fruit_store.Server/GetReport',
            fruit__store_dot_grpc_dot_fruit__store__pb2.ReportRequest.SerializeToString,
            fruit__store_dot_grpc_dot_fruit__store__pb2.ReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Healthcheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fruit_store.Server/Healthcheck',
            fruit__store_dot_grpc_dot_fruit__store__pb2.Empty.SerializeToString,
            fruit__store_dot_grpc_dot_fruit__store__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
